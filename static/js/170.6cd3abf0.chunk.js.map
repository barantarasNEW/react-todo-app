{"version":3,"file":"static/js/170.6cd3abf0.chunk.js","mappings":"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","sources":["components/Form/Form.tsx","components/Todo/Styles.ts","components/Todo/Todo.tsx","components/Todos/Styles.ts","components/Todos/Todos.tsx","pages/Todo/Todo.tsx","redux/hooks.ts"],"sourcesContent":["import React, {ChangeEvent, FormEvent, useState} from \"react\";\nimport {IconButton, InputAdornment, TextField} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { uid } from 'uid';\n\nimport {useAppDispatch} from \"../../redux/hooks\";\nimport {addTodo} from \"../../redux/slices/todosSlice\";\n\nconst Form = () => {\n  const [value, setValue] = useState('');\n  const dispatch = useAppDispatch();\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const onClear = () => {\n    setValue('');\n  };\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!value.length) {\n      return;\n    }\n\n    const newTodo = {\n      id: uid(),\n      isChecked: false,\n      value,\n    };\n\n    dispatch(addTodo(newTodo));\n    onClear();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextField\n        label=\"Enter todo here\"\n        value={value}\n        onChange={onChange}\n        autoComplete=\"off\"\n        autoFocus\n        fullWidth\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {!!value.length && (\n                <IconButton edge=\"end\" onClick={onClear}>\n                  <ClearIcon />\n                </IconButton>\n              )}\n            </InputAdornment>\n          ),\n        }}\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import {styled} from \"@mui/material/styles\";\nimport {ListItem, ListItemIcon, TextField} from \"@mui/material\";\n\nexport const StyledListItem = styled(ListItem)({\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  gap: 5\n});\n\nexport const StyledTextField = styled(TextField)<any>(({checked}) => ({\n  textDecoration: `${checked ? 'line-through' : 'none'}`,\n}));\n\nexport const StyledListItemIcon = styled(ListItemIcon)`\n  & {\n    min-width: auto !important;\n  }\n`;\n","import {ChangeEvent, useEffect, useRef, useState} from \"react\";\nimport {Checkbox, IconButton} from \"@mui/material\";\nimport CheckOutlinedIcon from \"@mui/icons-material/CheckOutlined\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {useDispatch} from \"react-redux\";\n\nimport {removeTodo, toggleTodo, updateTodo} from \"../../redux/slices/todosSlice\";\nimport {Todo as TodoType} from '../../types/todo';\nimport {StyledListItem, StyledListItemIcon, StyledTextField} from \"./Styles\";\n\ntype Props = {\n  todo: TodoType;\n};\n\nconst Todo: React.FC<Props> = ({todo: {id, value, isChecked}}) => {\n  const [todoValue, setTodoValue] = useState(value);\n  const [isEdit, setIsEdit] = useState(false);\n  const ref = useRef<HTMLInputElement>(null);\n  const dispatch = useDispatch();\n\n  const onToggle = () => () => {\n    dispatch(toggleTodo(id));\n  };\n\n  const onRemove = () => {\n    dispatch(removeTodo(id));\n  };\n\n  const onIsEditToggle = () => {\n    setIsEdit(prev => !prev);\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTodoValue(event.target.value);\n  };\n\n  const onBlur = () => {\n    dispatch(updateTodo({id, todoValue}));\n    onIsEditToggle();\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      ref.current?.focus();\n    }\n  }, [isEdit]);\n\n  return (\n    <StyledListItem disablePadding>\n      <StyledListItemIcon>\n        <Checkbox checked={isChecked} onChange={onToggle()}  />\n      </StyledListItemIcon>\n\n      <StyledTextField\n        size=\"small\"\n        value={todoValue}\n        onChange={onChange}\n        onBlur={onBlur}\n        checked={isChecked}\n        inputRef={ref}\n        spellCheck={false}\n        disabled={!isEdit}\n        fullWidth\n        multiline\n      />\n\n      <StyledListItemIcon>\n        {isEdit\n          ? (\n            <IconButton onClick={onBlur}>\n              <CheckOutlinedIcon />\n            </IconButton>\n          ) : (\n            <IconButton onClick={onIsEditToggle} disabled={isChecked}>\n              <EditIcon />\n            </IconButton>\n          )}\n      </StyledListItemIcon>\n\n      <StyledListItemIcon>\n        <IconButton onClick={onRemove}>\n          <DeleteIcon />\n        </IconButton>\n      </StyledListItemIcon>\n    </StyledListItem>\n  );\n};\n\nexport default Todo;\n","import {styled} from \"@mui/material/styles\";\nimport {List} from \"@mui/material\";\n\nexport const StyledList = styled(List)({\n  width: '80%',\n  margin: '0 auto',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 20\n});\n","import {useAppSelector} from \"../../redux/hooks\";\nimport Todo from \"../Todo/Todo\";\nimport {StyledList} from \"./Styles\";\n\nconst Todos = () => {\n  const {todos} = useAppSelector(state => state.todos);\n\n  return (\n    <StyledList dense>\n      {todos.map((todo) => (\n        <Todo key={todo.id} todo={todo} />\n      ))}\n    </StyledList>\n  );\n}\n\nexport default Todos;","import {Container} from \"@mui/material\";\nimport Form from \"../../components/Form/Form\";\nimport Todos from \"../../components/Todos/Todos\";\n\nconst Todo = () => {\n  return (\n    <Container>\n      <Form />\n\n      <Todos />\n    </Container>\n  );\n};\n\nexport default Todo;\n","import {useDispatch, useSelector} from 'react-redux';\nimport type {TypedUseSelectorHook} from 'react-redux';\nimport type {RootState, AppDispatch} from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":["_useState","useState","_useState2","_slicedToArray","value","setValue","dispatch","useAppDispatch","onClear","_jsx","onSubmit","event","preventDefault","length","newTodo","id","uid","isChecked","addTodo","children","TextField","label","onChange","target","autoComplete","autoFocus","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","ClearIcon","StyledListItem","styled","ListItem","width","display","alignItems","justifyContent","gap","StyledTextField","_ref","checked","textDecoration","concat","StyledListItemIcon","ListItemIcon","_templateObject","_taggedTemplateLiteral","_ref$todo","todo","todoValue","setTodoValue","_useState3","_useState4","isEdit","setIsEdit","ref","useRef","useDispatch","onIsEditToggle","prev","onBlur","updateTodo","useEffect","_ref$current","current","focus","_jsxs","disablePadding","Checkbox","toggleTodo","size","inputRef","spellCheck","disabled","multiline","CheckOutlinedIcon","EditIcon","removeTodo","DeleteIcon","StyledList","List","margin","flexDirection","todos","useAppSelector","state","dense","map","Todo","Container","Form","Todos","useSelector"],"sourceRoot":""}